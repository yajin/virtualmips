#summary How to run pavo emulation

= Download the test suit =

Download the [http://virtualmips.googlecode.com/files/test_suit-0.05.tar.bz2 test suit] first.

{{{
tar -jxvf test_suit-0.05.tar.bz2
cd test_suit-0.05
}}}

There are several files in direcotry test_suit-0.04.
 * pavo/config.linux2.4.20.pavo: inux 2.4.20 config for pavo
 * pavo/config.linux2.6.23.pavo: inux 2.6.23 config for pavo
 * pavo/uImage-2.6: linux 2.6.24 kernel image for pavo *with* LCD and cs8900 netword card support
 * pavo/uImage-2.4: linux 2.4.20 kernel image for pavo *with* LCD and cs8900 netword card support
 * pavo/u-boot-nand.bin : u-boot nand flash image for pavo *with* LCD support
 * adm5120/vmlinux-adm5120: linux 2.6.22 kernel and root file system for adm5120
 * adm5120/run.bin: linux 2.6.22 kernel image and boot loader for adm5120

= Download the rootfs for pavo =

Download the [ftp://ftp.ingenic.cn/3sw/01linux/03root/rootfs-20080409.tgz rootfs for pavo] form JZ's website

It includes rootfs for linux 2.6 and rootfs for linux 2.4 with qtopia 1.6.1.

= Make nand flash image for pavo =

{{{
tar zxvf rootfs-20080409.tgz
cd rootfs-20080409
mkyaffs2image 1 root26 root.yaffs2
}}}

It will create the yaffs2 root file system root.yaffs2. Copy it to VirtualMIPS directory.

{{{
cp rootfs-20080409/root.yaffs2  virtualmips-0.05/build
}}}

Copy u-boot image and linux kernel image to VirtualMIPS.

{{{
cp test_suit-0.05/pavo/u-boot-nand.bin  virtualmips-0.05/build
cp test_suit-0.05/pavo/uImage-2.4  virtualmips-0.05/build
cp test_suit-0.05/pavo/uImage-2.6  virtualmips-0.05/build
}}}

VirtualMIPS provides a tool "mknandflash" to create the nand flash file(Source code is tool/mknandflash.c). Make sure you have setten the right u-boot/kernel image file name and root filesytem file name/startaddress in the configure file of mknandflash(nandflash.conf in directory virtualmips-0.05/build).See nandflash.conf for more information.

{{{
cd virtualmips-0.05/build
./mknandflash 
}}}

It will create a directory nandflash1GB containning nand flash file(One file one block).

= Create TAP device (optional) =

Since version 0.03, VirtualMIPS supports network card(cs8900a) emulation. Before using network card emulation, you need to create a tap device first.

{{{
tunctl
}}}

It will create a tap device 'tap0'.
{{{
[root@kill-bill /]# tunctl 
Set 'tap0' persistent and owned by uid 0
}}}

If tunctl command is not found in your computer, please install uml_utilities first.

* Debian etch
{{{
sudo apt-get install uml-utilities
}}}

* Archlinux
{{{
sudo pacman -S user-mode-linux
sudo pacman -S uml_utilities
modprobe tun
}}}

Change the pavo.conf in virtualmips-0.05/build to enable network card emulation.

{{{
cs8900_enable = 1
cs8900_iotype = "tap:tap0"  <- tap name can be changed according to your system. 
}}}

Read [pavonetwork this document] for how to use network in VirtualMIPS.


= Run pavo emulation =

{{{
cd virtualmips-0.05/build
./pavo
}}}


{{{
[root@kill-bill build]$# ./pavo
VirtualMIPS (version 0.05)
Copyright (c) 2008 yajin.
Build date: May 13 2008 21:20:28

Using configure file: pavo.conf
ram_size: 64M bytes 
boot_method: Binary 
flash_type: NAND FLASH 
flash_size: 1024M bytes 
boot_from: NAND FLASH 
CS8900 net card enabled
CS8900 iotype tap:tap0 

loaded 917 nand flash file from directory "nandflash1GB". 
VM 'pavo': starting simulation (CPU0 PC=0x80000004), JIT disabled.


NAND Secondary Program Loader

Starting U-Boot ...


U-Boot 1.1.6 (Apr 18 2008 - 16:24:45)

Board: Ingenic PAVO (CPU Speed 336 MHz)
DRAM:  64 MB
Top of RAM usable for U-Boot at: 84000000
LCD panel info: 480 x 272, 32 bit/pix
Reserving 512k for LCD Framebuffer at: 83f80000
Reserving 458k for U-Boot at: 83f0c000
Reserving 896k for malloc() at: 83e2c000
Reserving 44 Bytes for Board Info at: 83e2bfd4
Reserving 60 Bytes for Global Data at: 83e2bf98
Reserving 128k for boot params() at: 83e0bf98
Stack Pointer at: 83e0bf78
Now running in RAM - U-Boot at: 83f0c000
Flash:  0 kB
NAND:1024 MiB
*** Warning - bad CRC or NAND, using default environment

[LCD] Initializing LCD frambuffer at 83f80000
vid->vl_row = 0x00000110   vid->vl_col 0x000001e0 NBITS (vid->vl_bpix) vid->vl_col 0x00000020
palette_mem_size = 0x00000200
lcdbase = 0x83f80000
fb_size = 0x0007f800
fbi->palette = 0x84000600
fbi = 0x83f428a8
[LCD] Drawing the logo...
Logo: width 160  height 96  colors 31  cmap 62
In:    serial
Out:   lcd
Err:   lcd
### main_loop entered: bootdelay=3

### main_loop: bootcmd="nand read 0x80600000 0x400000 0x300000;bootm"
Hit any key to stop autoboot:  0 

NAND read: device 0 offset 0x400000, size 0x300000
 3145728 bytes read: OK
## Booting image at 80600000 ...
   Image Name:   Linux Kernel Image
   Image Type:   MIPS Linux Kernel Image (gzip compressed)
   Data Size:    965758 Bytes = 943.1 kB
   Load Address: 80100000
   Entry Point:  802e8040
   Verifying Checksum ... OK
   Uncompressing Kernel Image ... OK
No initrd
## Transferring control to Linux (at address 802e8040) ...
## Giving linux memsize in MB, 64

Starting kernel ...

CPU revision is: 0ad0024f
ICACHE waybit = 12, DCACHE waybit = 12 
Primary instruction cache 16kB, physically tagged, 4-way, linesize 32 bytes.
Primary data cache 16kB 4-way, linesize 32 bytes.
Linux version 2.4.20-celf3 (root@KILL-BILL) (gcc version 3.3.1) #12 Wed Apr 23 16:08:33 CST 2008
System clocks setup: cclk=336MHZ hclk=112MHZ pclk=112MHZ mclk=112MHZ
Determined physical RAM map:
 memory: 00000040 @ 00000000 (usable)
User-defined physical RAM map:
 memory: 04000000 @ 00000000 (usable)
On node 0 totalpages: 16384
zone(0): 16384 pages.
zone(1): 0 pages.
zone(2): 0 pages.
Kernel command line: mem=64M console=ttyS0,57600n8 ip=off rootfstype=yaffs2 root=/dev/mtdblock2 rw
Console: colour dummy device 80x25
Calibrating delay loop... 91.75 BogoMIPS
Use 'Preset loops_per_jiffy'=458752 for preset lpj.
Memory: 61360k/65536k available (1941k kernel code, 4176k reserved, 120k data, 96k init, 0k highmem)
Dentry cache hash table entries: 8192 (order: 4, 65536 bytes)
Inode cache hash table entries: 4096 (order: 3, 32768 bytes)
Mount-cache hash table entries: 1024 (order: 1, 8192 bytes)
Buffer-cache hash table entries: 4096 (order: 2, 16384 bytes)
Page-cache hash table entries: 16384 (order: 4, 65536 bytes)
Checking for 'wait' instruction...  available.
POSIX conformance testing by UNIFIX
Linux NET4.0 for Linux 2.4
Based upon Swansea University Computer Society NET3.039
Initializing RT netlink socket
Starting kswapd
Disabling the Out Of Memory Killer
Journalled Block Device driver loaded
yaffs Apr 21 2008 18:39:02 Installing. 
JFFS2 version 2.2. (NAND) (C) 2001-2003 Red Hat, Inc.
jzlcd use 1 framebuffer:
jzlcd fb[0] phys addr =0x01100000
LCDC: PixClock:9081081 LcdClock:28000000
Console: switching to colour frame buffer device 60x34
initialize_kbd: Keyboard failed self test
pty: 256 Unix98 ptys configured
Serial driver version 5.05c (2001-07-08) with no serial options enabled
ttyS00 at 0xb0030000 (irq = 9) is a 16450
rtc: I/O port 112 is not free.
JzSOC onchip RTC installed !!!
JzSOC Watchdog Timer: timer margin 60 sec
JzSOC: char device family.
jz-ts: registered
JZ4740 SAR-ADC driver registered
UDC hotplug driver installed
RAMDISK driver initialized: 16 RAM disks of 8192K size 1024 blocksize
loop: loaded (max 8 devices)
Jz Cirrus Logic CS8900A driver for Linux (V0.02)
eth0: CS8900A rev ; detected
SCSI subsystem driver Revision: 1.00
kmod: failed to exec /sbin/modprobe -s -k scsi_hostadapter, errno = 2
NAND device: Manufacturer ID: 0xec, Chip ID: 0xd3 (Samsung NAND 1GiB 3,3V 8-bit)
Creating 6 MTD partitions on "NAND 1GiB 3,3V 8-bit":
0x00000000-0x00400000 : "NAND BOOT partition"
0x00400000-0x00800000 : "NAND KERNEL partition"
0x00800000-0x08000000 : "NAND ROOTFS partition"
0x08000000-0x10000000 : "NAND DATA1 partition"
0x10000000-0x20000000 : "NAND DATA2 partition"
0x20000000-0x40000000 : "NAND VFAT partition"
mice: PS/2 mouse device common for all mice
NET4: Linux TCP/IP 1.0 for NET4.0
IP Protocols: ICMP, UDP, TCP
IP: routing cache hash table of 512 buckets, 4Kbytes
TCP: Hash tables configured (established 4096 bind 8192)
NET4: Unix domain sockets 1.0/SMP for Linux NET4.0.
Total 4MB memory at 0x3c00000 was reserved for IPU
yaffs: dev is 7938 name is "1f:02"
yaffs: Attempting MTD mount on 31.2, "1f:02"
VFS: Mounted root (yaffs2 filesystem).
Freeing unused kernel memory: 96k freed
Algorithmics/MIPS FPU Emulator v1.5
FAT: bogus logical sector size 65535
#

}}}

[http://virtualmips.googlecode.com/svn/wiki/img/system-info.jpg]

= How to stop emulation =

press *CTRL+\* to stop emulation. CTRL+C is sent to guest.

= Links =

 * [PavoLCDEmulation How to run pavo LCD emulation]
 * [pavonetwork How to use network in pavo emulation]
 